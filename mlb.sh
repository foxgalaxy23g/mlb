#!/bin/bash

if [ "$EUID" -ne 0 ]; then
  echo "Meetlook Linux Builder –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ sudo" >&2
  exit 1
fi

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥ —Å–∫—Ä–∏–ø—Ç–∞ –Ω–∏–∂–µ
#echo "Meetlook Linux Builder by foxgalaxy23"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
REQUIRED_PKGS=(live-build squashfs-tools xorriso rsync syslinux isolinux)

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

for pkg in "${REQUIRED_PKGS[@]}"; do
  if ! dpkg -s "$pkg" &> /dev/null; then
    echo "üì¶ –ü–∞–∫–µ—Ç '$pkg' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é..."
    sudo apt-get update
    sudo apt-get install -y "$pkg"
  else
    echo "‚úÖ $pkg –Ω–∞–π–¥–µ–Ω"
  fi
done

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è lb
if ! command -v lb &> /dev/null; then
  echo "‚ùå –ö–æ–º–∞–Ω–¥–∞ 'lb' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ live-build"
  exit 1
fi

set -e

# === –ù–ê–°–¢–†–û–ô–ö–ò ===
DISTRO="bookworm"
BUILD_DIR="$PWD/live-build"
OUTPUT_ISO="$BUILD_DIR/live-image-amd64.hybrid.iso"

WORKDIR="$PWD/liveiso"
EXTRACT="$WORKDIR/extract"
FS="$WORKDIR/filesystem"
FINAL_ISO="$WORKDIR/custom-live.iso"

COMMANDS_FILE="$PWD/commands.txt"

# === 1. –ö–æ–º–ø–∏–ª—è—Ü–∏—è Live OS ===
echo "üõ†Ô∏è 1. –°–±–æ—Ä–∫–∞ live-build –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞..."

mkdir -p "$BUILD_DIR"
cd "$BUILD_DIR"

echo "üßº –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π —Å–±–æ—Ä–∫–∏..."
sudo lb clean --all || true

echo "‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Live Build..."
sudo lb config --distribution "$DISTRO" --binary-images iso-hybrid || {
  echo "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ live-build"
  exit 1
}

echo "üì¶ –°–±–æ—Ä–∫–∞ ISO. –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."
sudo lb build

if [ ! -f "$OUTPUT_ISO" ]; then
  echo "‚ùå ISO –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Å–ª–µ —Å–±–æ—Ä–∫–∏: $OUTPUT_ISO"
  exit 1
fi

cd "$PWD"

# === 2. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ ISO –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ chroot ===
echo "üóÉÔ∏è 2. –°–æ–∑–¥–∞–Ω–∏–µ —Ä–∞–±–æ—á–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p "$EXTRACT" "$FS"

echo "üì¶ 3. –ú–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ ISO..."
sudo mount -o loop "$OUTPUT_ISO" /mnt
rsync -a /mnt/ "$EXTRACT/"
sudo umount /mnt

echo "üì§ 4. –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ squashfs..."
sudo unsquashfs -d "$FS" "$EXTRACT/live/filesystem.squashfs"

echo "üîß 5. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ chroot –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo mount --bind /dev  "$FS/dev"
sudo mount --bind /dev/pts "$FS/dev/pts"
sudo mount -t sysfs sys "$FS/sys"
sudo mount -t proc proc "$FS/proc"
sudo cp /etc/resolv.conf "$FS/etc/resolv.conf"

# === 6. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏–∑ commands.txt ===
if [ -f "$COMMANDS_FILE" ]; then
  echo "üìú –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥ –∏–∑ commands.txt –≤–Ω—É—Ç—Ä–∏ chroot..."
  # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª –≤–Ω—É—Ç—Ä—å
  sudo cp "$COMMANDS_FILE" "$FS/root/commands.txt"
  sudo chroot "$FS" /bin/bash -c "bash /root/commands.txt && rm /root/commands.txt"
else
  echo "‚ö†Ô∏è –§–∞–π–ª commands.txt –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞—é –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã."
fi

# === 7. –†—É—á–Ω–æ–π chroot ===
echo "üö™ 7. –í—Ö–æ–¥ –≤ chroot. –í—ã–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ 'exit' –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ."
sudo chroot "$FS" /bin/bash

# === 8. –û—á–∏—Å—Ç–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è ===
echo "üßπ 8. –û—á–∏—Å—Ç–∫–∞ chroot –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
sudo umount "$FS/dev/pts"
sudo umount "$FS/dev"
sudo umount "$FS/proc"
sudo umount "$FS/sys"

echo "üì¶ 9. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ squashfs..."
sudo mksquashfs "$FS" "$EXTRACT/live/filesystem.squashfs" -noappend

echo "üßΩ –£–¥–∞–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π rootfs..."
sudo rm -rf "$FS"

# === 10. –°–±–æ—Ä–∫–∞ ISO –æ–±—Ä–∞—Ç–Ω–æ ===
MBR_BIN="/usr/lib/ISOLINUX/isohdpfx.bin"
[ ! -f "$MBR_BIN" ] && MBR_BIN="/usr/lib/syslinux/isohdpfx.bin"

echo "üíø 10. –°–±–æ—Ä–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ ISO..."
cd "$EXTRACT"

sudo xorriso -as mkisofs \
  -iso-level 3 \
  -o "$FINAL_ISO" \
  -full-iso9660-filenames \
  -volid "Custom Live" \
  -isohybrid-mbr "$MBR_BIN" \
  -c isolinux/boot.cat \
  -b isolinux/isolinux.bin \
  -no-emul-boot -boot-load-size 4 -boot-info-table \
  -eltorito-alt-boot \
  -e boot/grub/efi.img \
  -no-emul-boot \
  .

cd "$PWD"

echo "‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–æ–≤—ã–π ISO: $FINAL_ISO"

